name: Create Release and Publish

on:
  pull_request:
    branches:
      - main
    types:
      - closed
    paths:
      - 'packages/storyshot/**'

permissions:
  contents: write

jobs:
  create-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install Dependencies
        run: cd packages/storyshot && pnpm install

      - name: Build Project
        run: cd packages/storyshot && pnpm run build

      - name: Get Version
        id: get-version
        run: |
          cd packages/storyshot
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Pack Package
        run: |
          cd packages/storyshot
          pnpm pack
          mv *.tgz ../storyshot.tgz

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get-version.outputs.version }}
          name: Release v${{ steps.get-version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            packages/storyshot.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    needs: create-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org/"
          scope: '@rock24'

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install Dependencies
        run: cd packages/storyshot && pnpm install

      - name: Build Project
        run: cd packages/storyshot && pnpm run build

      - name: Test Publish
        run: cd packages/storyshot && pnpm publish --dry-run

      - name: Publish to NPM
        run: cd packages/storyshot && pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
